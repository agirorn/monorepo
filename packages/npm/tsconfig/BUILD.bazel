load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@npm//:eslint/package_json.bzl", eslint_bin = "bin")

SRC_PATTERNS = ["**/*.json"]

# make this library available via node_modules
npm_package(
    name = "tsconfig",
    srcs = [
        "//:node_modules/@tsconfig/node16-strictest",
    ] + glob(SRC_PATTERNS),
    # This is a perf improvement; the default will be flipped to False in rules_js 2.0
    include_runfiles = False,
    visibility = ["//visibility:public"],
)

eslint_bin.eslint_test(
    name = "eslint_test",
    args = ["{}/{}".format(
        package_name(),
        p,
    ) for p in SRC_PATTERNS],
    data = [
        # These files are intentionally skipped here to get linting to work in
        # these JSON files
        #
        # "package.json",
        # "tsconfig.json",
        ".eslintrc.js",
        ".prettierrc.json",
        "//:node_modules/@monorepo/tsconfig",
        "//:node_modules/@tsconfig/node16-strictest",
        "//:node_modules/@monorepo/eslint-config",
        "//:node_modules/@monorepo/prettier-config",
        "//:node_modules/eslint-plugin-node",
        "//:node_modules/eslint-config-prettier",
        "//:node_modules/eslint-plugin-prettier",
        "//:node_modules/@typescript-eslint/eslint-plugin",
        "//:node_modules/@typescript-eslint/parser",
        "//:node_modules/prettier",
    ] + glob(SRC_PATTERNS),
)
